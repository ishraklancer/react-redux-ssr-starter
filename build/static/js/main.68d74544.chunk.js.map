{"version":3,"sources":["actions/index.js","App.js","reducers/counter.js","reducers/isLogged.js","reducers/index.js","index.js"],"names":["increment","type","decrement","login","App","counter","useSelector","state","isLogged","dispatch","useDispatch","react_default","a","createElement","className","onClick","counterReducer","arguments","length","undefined","loggedReducer","allReducers","combineReducers","preloadedState","window","__PRELOADED_STATE__","store","createStore","counterApp","hydrate","es","src_App","document","getElementById"],"mappings":"6IAAaA,SAAY,WACvB,MAAO,CACLC,KAAM,eAIGC,EAAY,WACvB,MAAO,CACLD,KAAM,cAIGE,EAAQ,WACnB,MAAO,CACLF,KAAM,YCSKG,MAlBf,WACE,IAAMC,EAAUC,YAAY,SAACC,GAAD,OAAWA,EAAMF,UACvCG,EAAWF,YAAY,SAACC,GAAD,OAAWA,EAAMC,WACxCC,EAAWC,cACjB,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,qBAAaR,GACbM,EAAAC,EAAAC,cAAA,UAAQE,QAAS,kBAAMN,EAAST,OAAhC,KACAW,EAAAC,EAAAC,cAAA,UAAQE,QAAS,kBAAMN,EAASP,OAAhC,KACAS,EAAAC,EAAAC,cAAA,UAAQE,QAAS,kBAAMN,EAASN,OAC3BK,EAAwB,SAAZ,SAGhBA,EAAWG,EAAAC,EAAAC,cAAA,kDAAgD,KCPnDG,EAXQ,WAAuB,IAAtBT,EAAsBU,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAd,EAC5B,QAD0CA,UAAAC,OAAA,EAAAD,UAAA,QAAAE,GAC3BlB,MACX,IAAK,YACD,OAAOM,EAAQ,EACnB,IAAK,YACD,OAAOA,EAAQ,EACnB,QACI,OAAOA,ICEJa,EATO,WAA2B,IAA1Bb,EAA0BU,UAAAC,OAAA,QAAAC,IAAAF,UAAA,IAAAA,UAAA,GAC7C,QAD6CA,UAAAC,OAAA,EAAAD,UAAA,QAAAE,GAC/BlB,MACV,IAAK,UACD,OAAQM,EACZ,QACI,OAAOA,ICIJc,EALKC,YAAgB,CAChCjB,QAASW,EACTR,SAAUY,ICERG,EAAiBC,OAAOC,2BAGvBD,OAAOC,oBAGd,IAAMC,EAAQC,YAAYC,EAAYL,GAEtCM,kBACElB,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAUJ,MAAOA,GACff,EAAAC,EAAAC,cAACkB,EAAD,OAEFC,SAASC,eAAe","file":"static/js/main.68d74544.chunk.js","sourcesContent":["export const increment = () => {\r\n  return {\r\n    type: 'INCREMENT',\r\n  };\r\n};\r\n\r\nexport const decrement = () => {\r\n  return {\r\n    type: 'DECREMENT',\r\n  };\r\n};\r\n\r\nexport const login = () => {\r\n  return {\r\n    type: 'SIGN_IN',\r\n  };\r\n};\r\n","import React from 'react';\r\nimport { isNoop } from '@babel/types';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { increment, decrement, login } from './actions';\r\n\r\nfunction App() {\r\n  const counter = useSelector((state) => state.counter);\r\n  const isLogged = useSelector((state) => state.isLogged);\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>Counter {counter}</h1>\r\n      <button onClick={() => dispatch(increment())}>+</button>\r\n      <button onClick={() => dispatch(decrement())}>-</button>\r\n      <button onClick={() => dispatch(login())}>\r\n        {(!isLogged && 'login') || 'logout'}\r\n      </button>\r\n\r\n      {isLogged ? <h3>Valuable Information I shouldn't see</h3> : ''}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const counterReducer = (state = 0, action) => {\r\n    switch (action.type){\r\n        case 'INCREMENT':\r\n            return state + 1;\r\n        case 'DECREMENT':\r\n            return state - 1;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default counterReducer;","const loggedReducer = (state = false, action) => {\r\n    switch(action.type){\r\n        case 'SIGN_IN':\r\n            return !state;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default loggedReducer","import counterReducer from  './counter';\r\nimport loggedReducer from './isLogged';\r\nimport {combineReducers} from 'redux';\r\n\r\nconst allReducers = combineReducers({\r\n    counter: counterReducer,\r\n    isLogged: loggedReducer\r\n});\r\n\r\nexport default allReducers;","import React from \"react\";\r\nimport { hydrate } from \"react-dom\";\r\nimport { createStore } from \"redux\";\r\nimport { Provider } from \"react-redux\";\r\nimport App from \"../src/App\";\r\nimport counterApp from \"./reducers\";\r\n\r\n// Grab the state from a global variable injected into the server-generated HTML\r\nconst preloadedState = window.__PRELOADED_STATE__;\r\n\r\n// Allow the passed state to be garbage-collected\r\ndelete window.__PRELOADED_STATE__;\r\n\r\n// Create Redux store with initial state\r\nconst store = createStore(counterApp, preloadedState);\r\n\r\nhydrate(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}